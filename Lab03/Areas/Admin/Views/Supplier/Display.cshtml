@model Lab03.Models.Supplier

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Chi tiết Nhà Cung Cấp</title>
    <link rel="stylesheet" href="~/vendors/typicons/typicons.css">
    <link rel="stylesheet" href="~/vendors/css/vendor.bundle.base.css">
    <link rel="stylesheet" href="~/css/vertical-layout-light/style.css">
    <link rel="stylesheet" href="~/css/AdminStyle.css" />
    <style>
        .table th {
            background-color: #007bff;
            color: white;
        }

        .container h2, .container h3 {
            color: #007bff;
        }

        .btn-primary, .btn-info, .btn-secondary {
            background-color: #007bff;
            border-color: #007bff;
        }




        /* Toast container */
        .toast-container {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 300px;
        }

        .toast-custom {
            background-color: #28a745;
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            opacity: 0;
            transform: translateY(-10px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

            .toast-custom.show {
                opacity: 1;
                transform: translateY(0);
            }




        /* Toast Error */
        .toast-container-error {
            position: absolute;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 300px;
        }

        .toast-custom-error {
            background-color: #dc3545; /* Màu đỏ cho lỗi */
            color: white;
            padding: 10px 15px;
            border-radius: 5px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            font-size: 14px;
            display: flex;
            align-items: center;
            justify-content: space-between;
            opacity: 0;
            transform: translateY(-10px);
            transition: opacity 0.3s ease, transform 0.3s ease;
        }

            .toast-custom-error.show {
                opacity: 1;
                transform: translateY(0);
            }


    </style>
</head>

<body>
    <div class="container mt-4">
        <h2>Chi tiết Nhà Cung Cấp: @Model.SupplierName</h2>

        <!--Modal thành công-->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="toast-container">
                <div id="successToast" class="toast-custom">
                    <div class="toast-body">
                        @TempData["SuccessMessage"]
                    </div>
                </div>
            </div>

            <script>
                window.onload = function () {
                    var successToast = new bootstrap.Toast(document.getElementById('successToast'), {
                        delay: 2500 // Thời gian hiển thị (2.5 giây)
                    });
                    successToast.show();
                };
            </script>
        }



        <script>
            // Hiển thị Toast Modal thành công
            function showToast() {
                var toast = document.getElementById('successToast');
                toast.classList.remove('hidden');
                toast.classList.add('show');

                // Tự động ẩn sau 3 giây
                setTimeout(function () {
                    toast.classList.remove('show');
                    toast.classList.add('hidden');
                }, 3000);
            }

            // Kích hoạt khi có TempData["SuccessMessage"]
            window.onload = function () {
                if (@TempData["SuccessMessage"] != null) {
                    showToast();
                }
            };
        </script>


        <!-- Modal thông báo lỗi -->
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="toast-container-error">
                <div id="errorToast" class="toast-custom-error">
                    <div class="toast-body">
                        @TempData["ErrorMessage"]
                    </div>
                </div>
            </div>

            <script>
                window.onload = function () {
                    // Kiểm tra nếu có thông báo lỗi
                    var errorMessage = "@TempData["ErrorMessage"]";
                    if (errorMessage) {
                        var errorToast = new bootstrap.Toast(document.getElementById('errorToast'), {
                            delay: 2500 // Thời gian hiển thị (2.5 giây)
                        });
                        errorToast.show();
                    }
                };
            </script>
        }




        <h3>Sản phẩm đã cung cấp</h3>
        <div class="table-container">
            <!-- Added table container for shadow and radius -->
            <div class="table-responsive">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>STT</th>
                            <th>Thể loại</th>
                            <th>Tên Sản Phẩm</th>
                            <th>Số lượng</th>
                            <th>Trạng Thái</th>
                            <th>Thêm vào kho</th>
                            <th>Cập nhật trạng thái</th>
                            <th>Nhập cấu hình</th>
                            <th>Xem chi tiết</th>
                            <th>Xóa sản phẩm</th> <!-- Thêm cột Xóa sản phẩm -->
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.SupplierProducts.Count; i++)
                        {
                            var item = Model.SupplierProducts.ElementAt(i);
                            <tr>
                                <td>@(i + 1)</td>
                                <td>@item.Category.Name</td>
                                <td>@(item.ProductName.Length > 30 ? item.ProductName.Substring(0, 30) + "..." : item.ProductName)</td>

                                <td>@item.Quantity</td>
                                <td>
                                    @if (item.Quantity <= 0)
                                    {
                                        <span class="text-danger">Hết hàng</span>
                                    }
                                    else
                                    {
                                        <span class="@(item.Status == "Đã xác nhận" ? "text-success" : "text-warning")">@item.Status</span>
                                    }
                                </td>

                                <!-- Thêm vào kho -->
                                <td>
                                    @if (item.Quantity > 0 && item.Status == "Đã xác nhận")
                                    {
                                        <button class="btn btn-success" data-toggle="modal" data-target="#confirmModal-@item.Id">Thêm vào kho</button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary" disabled>Không thể thêm</button>
                                    }
                                </td>




                                <div class="modal fade" id="confirmModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel-@item.Id" aria-hidden="true">
                                    <div class="modal-dialog" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h5 class="modal-title" id="confirmModalLabel-@item.Id">Xác nhận thêm vào kho: @item.ProductName</h5>
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">&times;</span>
                                                </button>
                                            </div>
                                            <div class="modal-body">
                                                <form asp-action="ConfirmProduct" method="post">
                                                    <input type="hidden" name="supplierProductId" value="@item.Id" />
                                                    <!-- Số lượng sản phẩm muốn thêm vào kho -->
                                                    <div class="form-group">
                                                        <label for="quantity-@item.Id">Số sản phẩm muốn thêm vào kho:</label>
                                                        <input type="number" id="quantity-@item.Id" name="quantity" class="form-control" value="@(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item1.ToString() : "0")" required />
                                                        <small class="form-text text-muted">
                                                            (Hiện có: @(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item1.ToString() : "Mới"))
                                                        </small>
                                                    </div>

                                                    <!-- Vị trí trong kho -->
                                                    <div class="form-group">
                                                        <label for="location-@item.Id">Vị trí trong kho:</label>
                                                        <input type="text" id="location-@item.Id" name="location" class="form-control" value="@(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item2 : "Mới")" />
                                                        <small class="form-text text-muted">
                                                            (Vị trí hiện tại: @(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item2 : "Mới"))
                                                        </small>
                                                    </div>

                                                    <!-- Giá bán -->
                                                    <div class="form-group">
                                                        <label for="sellingPrice-@item.Id">Giá bán:</label>
                                                        <input type="text" id="sellingPrice-@item.Id" name="sellingPrice" class="form-control" value="@(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item3.ToString("N0") : "0")" required />
                                                        <small class="form-text text-muted">
                                                            (Giá bán hiện tại: @(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item3.ToString("N0") : "Mới"))
                                                        </small>
                                                    </div>

                                                    <!-- Ghi chú -->
                                                    <div class="form-group">
                                                        <label for="notes-@item.Id">Ghi chú:</label>
                                                        <input type="text" id="notes-@item.Id" name="notes" class="form-control" value="@(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item4 : "")" />
                                                        <small class="form-text text-muted">
                                                            (Ghi chú hiện tại: @(ViewBag.InventoryInfo.ContainsKey(item.Id) ? ViewBag.InventoryInfo[item.Id].Item4 : "Mới"))
                                                        </small>
                                                    </div>

                                                    <button type="submit" class="btn btn-primary">Xác nhận</button>
                                                </form>
                                            </div>
                                        </div>
                                    </div>
                                </div>



                                <!-- Cập nhật trạng thái -->
                                <td>
                                    @if (item.Quantity > 0)
                                    {
                                        <div class="dropdown d-inline">
                                            <button class="btn btn-secondary dropdown-toggle" type="button" data-toggle="dropdown">
                                                Trạng thái
                                            </button>
                                            <div class="dropdown-menu">
                                                <!-- Tùy chọn trạng thái -->
                                                <a class="dropdown-item" asp-action="UpdateStatus" asp-route-id="@item.Id" asp-route-status="Đã xác nhận">Đã xác nhận</a>
                                                <a class="dropdown-item" asp-action="UpdateStatus" asp-route-id="@item.Id" asp-route-status="Chưa được xác nhận">Chưa được xác nhận</a>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <button class="btn btn-secondary" disabled>Không thể cập nhật</button>
                                    }
                                </td>

                                <!-- Nhập cấu hình -->
                                <td>
                                    <button class="btn btn-warning" data-toggle="modal" data-target="#configModal-@item.Id">
                                        Nhập cấu hình
                                    </button>

                                    <!-- Modal nhập cấu hình -->
                                    <div class="modal fade" id="configModal-@item.Id" tabindex="-1" role="dialog" aria-labelledby="configModalLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-lg" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="configModalLabel">Nhập cấu hình: @item.ProductName</h5>
                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">&times;</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    <form asp-action="AddProductConfig" method="post" class="form-horizontal">
                                                        <input type="hidden" name="productId" value="@item.Id" />

                                                        <div id="configFields-@item.Id" class="form-row">
                                                            @if (item.SupplierProductConfig != null)
                                                            {
                                                                var visibleFields = new List<string>();

                                                                // Giới hạn các trường cấu hình theo CategoryId
                                                                if (item.CategoryId == 1) // Ví dụ iPhone
                                                                {
                                                                    visibleFields = new List<string> { "Color", "CPU", "Ram", "ManHinh", "HeDieuHanh", "CameraSau", "CameraTruoc", "Sim", "DungLuong" };
                                                                }
                                                                else if (item.CategoryId == 2) // Ví dụ AirPods
                                                                {
                                                                    visibleFields = new List<string> { "Color", "KetNoi", "ChatLuongAmThanh", "ThoiLuongPin" };
                                                                }
                                                                else if (item.CategoryId == 3) // Ví dụ Apple Watch
                                                                {
                                                                    visibleFields = new List<string> { "Color", "CamBien", "KhaNangChongNuoc", "KichThuoc" };
                                                                }

                                                                // Lọc và hiển thị các trường cần thiết
                                                                foreach (var property in item.SupplierProductConfig.GetType().GetProperties())
                                                                {
                                                                    var value = property.GetValue(item.SupplierProductConfig);
                                                                    if (visibleFields.Contains(property.Name)) // Kiểm tra nếu thuộc tính có trong danh sách cần hiển thị
                                                                    {
                                                                        <div class="form-group col-md-6">
                                                                            <label>@property.Name</label>
                                                                            <!-- Hiển thị giá trị của trường nếu có -->
                                                                            <input type="text" name="@property.Name" class="form-control" value="@value" />
                                                                        </div>
                                                                    }
                                                                }
                                                            }
                                                            else
                                                            {
                                                                <p>Không có cấu hình cho sản phẩm này. Vui lòng nhập thông tin cấu hình.</p>
                                                            }
                                                        </div>

                                                        <button type="submit" class="btn btn-primary mt-3">Lưu cấu hình</button>
                                                    </form>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>

                                <!-- Xem chi tiết -->
                                <td>
                                    <!-- Link to redirect to the Details page -->
                                    <a class="btn btn-info" href="@Url.Action("Details", "Supplier", new { id = item.Id })">
                                        Xem Chi Tiết
                                    </a>
                                </td>

                                <!-- Xóa sản phẩm -->
                                <td>
                                    <form asp-action="Delete" asp-route-id="@item.Id" method="post" onsubmit="return confirm('Bạn có chắc chắn muốn xóa sản phẩm này?');">
                                        <button type="submit" class="btn btn-danger">Xóa</button>
                                    </form>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
        <a asp-action="AddProduct" asp-route-supplierId="@Model.Id" class="btn btn-success mt-3">Thêm sản phẩm</a>
        <a href="~/Admin/Supplier/Index" class="btn btn-primary mt-3">Quay lại danh sách</a>
    </div>









    <script>
        const categoryFields = {
            "1": ["Color", "CPU", "Ram", "ManHinh", "HeDieuHanh", "CameraSau", "CameraTruoc", "Sim", "DungLuong"], // iPhone
            "2": ["Color", "KetNoi", "ChatLuongAmThanh", "ThoiLuongPin"], // AirPods
            "3": ["Color", "CamBien", "KhaNangChongNuoc", "KichThuoc"], // Apple Watch
            "4": ["Color", "CPU", "Ram", "ManHinh", "HeDieuHanh", "CameraSau", "CameraTruoc", "Sim", "DungLuong"], // iPad
            "5": ["Color", "CPU", "Ram", "ManHinh", "HeDieuHanh", "CardDoHoa", "CongKetNoi", "TrongLuong"] // MacBook
        };

        function generateConfigFields(productId, categoryId) {
            const container = document.getElementById(`configFields-${productId}`);
            container.innerHTML = ""; // Xóa các trường cũ

            if (categoryFields[categoryId]) {
                categoryFields[categoryId].forEach(field => {
                    const fieldGroup = document.createElement("div");
                    fieldGroup.classList.add("form-group", "col-md-6"); // Hiển thị theo chiều ngang

                    const label = document.createElement("label");
                    label.textContent = field;

                    const input = document.createElement("input");
                    input.type = "text";
                    input.name = field;
                    input.classList.add("form-control");

                    fieldGroup.appendChild(label);
                    fieldGroup.appendChild(input);
                    container.appendChild(fieldGroup);
                });
            } else {
                container.innerHTML = "<p>Không có cấu hình nào cho loại sản phẩm này.</p>";
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
        @foreach (var item in Model.SupplierProducts)
        {
            @:generateConfigFields(@item.Id, "@item.CategoryId");
        }
                        });


    </script>




    <!-- Scripts để hiển thị modal -->
    <script src="~/vendors/js/vendor.bundle.base.js"></script>
    <script src="~/js/off-canvas.js"></script>
    <script src="~/js/hoverable-collapse.js"></script>
    <script src="~/js/template.js"></script>
    <script src="~/js/settings.js"></script>
    <script src="~/js/todolist.js"></script>


  



    <script>
        // Hàm formatNumber để định dạng lại giá trị khi người dùng nhập
        function formatNumber(input) {
            let value = input.value.replace(/\D/g, ''); // Loại bỏ tất cả các ký tự không phải số
            input.value = value.replace(/\B(?=(\d{3})+(?!\d))/g, ","); // Thêm dấu phẩy phân cách hàng nghìn
        }
    </script>





</body>




</html>
